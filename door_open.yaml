blueprint:
  name: Monitorar Sensor de Contato
  description: Monitora o estado de um sensor de contato e envia uma notificação após um tempo configurável.
  domain: automation
  input:
    sensor_contato:
      name: Escolha o sensor de contato
      selector:
        entity:
          domain: binary_sensor
    tempo_espera:
      name: Tempo de espera (em minutos)
      description: Quantos minutos o sensor deve permanecer no estado configurado antes de disparar o evento.
      default: 10
      selector:
        number:
          min: 1
          max: 60
          unit_of_measurement: min
    celulares:
      name: Escolha os celulares para receber a notificação
      selector:
        device:
          integration: mobile_app
          multiple: true

trigger:
  - platform: state
    entity_id: !input sensor_contato
    to: "on"  # Estado do sensor para disparar o trigger (ajuste se necessário)
    for:
      minutes: !input tempo_espera

action:
  - choose:
      - conditions: 
          - condition: template
            value_template: "{{ trigger.to_state is not none }}"
        sequence:
          - repeat:
              for_each: !input celulares
              sequence:
                - service: notify.mobile_app_{{ repeat.item }}
                  data:
                    message: >
                      O sensor de contato {{ trigger.entity_id }} permaneceu aberto por {{ states(trigger.entity_id).attributes.friendly_name if trigger.entity_id else 'Desconhecido' }}.
                    title: "Alerta: Sensor de Contato"

mode: single
